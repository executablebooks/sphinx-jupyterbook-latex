name: continuous-integration

on:
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: pre-commit/action@v2.0.0

  test-with-cov:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[testing]
        pip uninstall -y jupyter-book
        pip install git+https://github.com/executablebooks/jupyter-book@sphinx-jupyterbook-latex
    - name: Install latex dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y   \
          texlive                 \
          texlive-xetex           \
          texlive-latex-extra     \
          texlive-fonts-extra     \
          xindy                   \
          latexmk

    - name: Run pytest
      run: |
        pytest --durations=10 --cov=sphinx_jupyterbook_latex --cov-report=xml --cov-report=term-missing
        coverage xml

    - name: Upload to Codecov
      if: github.repository == 'executablebooks/sphinx-jupyterbook-latex'
      uses: codecov/codecov-action@v1
      with:
        name: sphinx-jupyterbook-latex-pytest-py3.7
        flags: pytests
        file: ./coverage.xml
        fail_ci_if_error: true

  tests:

    strategy:
      matrix:
        python-version: [3.6, 3.7]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[testing]

    - name: Run pytest
      run: pytest --durations=10 -m 'not requires_tex'

  publish:
    name: Publish to PyPi
    needs: [pre-commit, tests, test-with-cov]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Build package
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_KEY }}
